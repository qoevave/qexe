"use strict";(self.webpackChunkqexe_website=self.webpackChunkqexe_website||[]).push([[278],{3218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>x,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var i=n(4848),r=n(8453);const s={sidebar_position:4,custom_edit_url:null},o="OSC Communication",d={id:"qexe-architecture/communication",title:"OSC Communication",description:"Sequence Diagram",source:"@site/docs/qexe-architecture/communication.mdx",sourceDirName:"qexe-architecture",slug:"/qexe-architecture/communication",permalink:"/qexe/docs/qexe-architecture/communication",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Unity Client",permalink:"/qexe/docs/qexe-architecture/unity-client"},next:{title:"The config File",permalink:"/qexe/docs/getting-started/config-file"}},l={},c=[{value:"Sequence Diagram",id:"sequence-diagram",level:2},{value:"OSC Message List",id:"osc-message-list",level:2},{value:"Max \u2192 Unity",id:"max--unity",level:3},{value:"Unity \u2192 Max",id:"unity--max",level:3}];function a(e){const t={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h3:"h3",mermaid:"mermaid",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"osc-communication",children:"OSC Communication"}),"\n",(0,i.jsx)(t.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,i.jsx)(t.p,{children:"Sequence diagram of OSC messages for automating the test."}),"\n",(0,i.jsx)(t.admonition,{title:"Information",type:"tip",children:(0,i.jsxs)(t.p,{children:["The following diagram is an overview of OSC messages between Max and Unity. For a sequence diagram of how to set up a test, see the ",(0,i.jsx)(t.a,{href:"/qexe/docs/example-test",children:"example test"})," page."]})}),"\n",(0,i.jsx)(t.mermaid,{value:"sequenceDiagram\n    actor Jeff the Admin\n    Jeff the Admin->>Unity Agent: 'Play' Unity _config scene\n    Unity Agent --\x3e> Unity Agent: Start runtime\n    Unity Agent--\x3e>Max Controller: agent_is_active = 1 \n    Max Controller --\x3e> Max Controller: is JSON loaded?\n    alt JSON.loaded = 0\n    else JSON.loaded = 1\n        Unity Agent --\x3e> Max Controller: get_paradigm_information()\n        Max Controller --\x3e> Unity Agent: set_paradigm_information()\n        Note left of Max Controller: method, numberOfConditions, <br/> questionnaire, questionnaireIntegration\n        Unity Agent --\x3e> Max Controller: get_next_item()\n        loop Main Test Loop\n            Max Controller --\x3e> Unity Agent: give_unity_scene_item()\n            activate Unity Agent\n            Note left of Max Controller: _unityScene_ID\n            alt 360VideoScene\n                Max Controller --\x3e> Unity Agent: give_unity_video_info()\n                Note left of Max Controller: nextVideoFile, nextVideo_ID\n            end\n            Note over Unity Agent: Subject performs <br> test in CGI or 360 video scene\n            Unity Agent --\x3e> Max Controller: set_next_item()\n            deactivate Unity Agent\n            Unity Agent --\x3e> Unity Agent: Load next scene\n            alt current scene == _config\n                Max Controller --\x3e> Unity Agent: give_subjects_results_directory()\n                Note left of Max Controller: ./path/to/results/Subjects_ID/\n            end\n            Max Controller --\x3e> Max Controller: Increment item\n            Unity Agent --\x3e> Max Controller: get_next_item()\n        end\n        Max Controller --\x3e> Max Controller: Test finished \n        Max Controller --\x3e> Unity Agent: give_unity_scene_item()\n        Note left of Max Controller: _config\n    end\n    Jeff the Admin ->> Unity Agent: 'Stop' Unity \n    Unity Agent--\x3e>Max Controller: agent_is_active = 0\n    Unity Agent --\x3e> Unity Agent: Stop runtime"}),"\n",(0,i.jsx)(t.h2,{id:"osc-message-list",children:"OSC Message List"}),"\n",(0,i.jsx)(t.admonition,{title:"FYI",type:"info",children:(0,i.jsx)(t.p,{children:'Argument in speech marks " " indicate a constant. These string messages are used to trigger functions in the receiving programs.'})}),"\n",(0,i.jsx)(t.h3,{id:"max--unity",children:"Max \u2192 Unity"}),"\n",(0,i.jsx)("span",{style:{fontSize:"0.8em"},children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Address"}),(0,i.jsx)(t.th,{children:"Arguments"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/client/item/"}),(0,i.jsxs)(t.td,{children:['"set_scene_item", ',(0,i.jsx)("br",{})," unityScene_ID"]}),(0,i.jsxs)(t.td,{children:["String, ",(0,i.jsx)("br",{})," String"]}),(0,i.jsxs)(t.td,{children:["Variable for OSC message swtich in Unity, ",(0,i.jsx)("br",{})," Name of Unity scene for method"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/client/item/"}),(0,i.jsxs)(t.td,{children:['"set_video_item", ',(0,i.jsx)("br",{})," videoFile, ",(0,i.jsx)("br",{})," videoID"]}),(0,i.jsxs)(t.td,{children:["String, ",(0,i.jsx)("br",{})," String, ",(0,i.jsx)("br",{})," Int"]}),(0,i.jsxs)(t.td,{children:["Variable for OSC message swtich case in Unity, ",(0,i.jsx)("br",{})," URL to video file, ",(0,i.jsx)("br",{})," ID number of video file"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/client/results/"}),(0,i.jsx)(t.td,{children:"subjectsPath"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"URL to this subjects result directory"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/client/configuration/"}),(0,i.jsxs)(t.td,{children:['"set_paradigm_information", ',(0,i.jsx)("br",{})," method, ",(0,i.jsx)("br",{})," numberOfConditions, ",(0,i.jsx)("br",{})," questionnaire, ",(0,i.jsx)("br",{})," questionnaireIntegration"]}),(0,i.jsxs)(t.td,{children:["String, ",(0,i.jsx)("br",{})," String, ",(0,i.jsx)("br",{})," Int, ",(0,i.jsx)("br",{})," String, ",(0,i.jsx)("br",{})," String"]}),(0,i.jsxs)(t.td,{children:["Variable for OSC message swtich in Unity, ",(0,i.jsx)("br",{})," Name of the method, ",(0,i.jsx)("br",{})," Number of parallel conditions, ",(0,i.jsx)("br",{})," Name of questionnaire, ",(0,i.jsx)("br",{})," How the questionnaire should be integrated"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/client/configuration/"}),(0,i.jsxs)(t.td,{children:['"json_loaded", ',(0,i.jsx)("br",{})," jsonLoaded"]}),(0,i.jsxs)(t.td,{children:["String, ",(0,i.jsx)("br",{})," Int"]}),(0,i.jsxs)(t.td,{children:["Variable for OSC message swtich in Unity, ",(0,i.jsx)("br",{})," Value to tell Unity is a JSON file is loaded in Max"]})]})]})]})}),"\n",(0,i.jsx)(t.h3,{id:"unity--max",children:"Unity \u2192 Max"}),"\n",(0,i.jsx)("span",{style:{fontSize:"0.8em"},children:(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Address"}),(0,i.jsx)(t.th,{children:"Arguments"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/control/"}),(0,i.jsx)(t.td,{children:'"get_next_item"'}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Calls function to ask the TestManager for the next unityScene_ID"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/control/"}),(0,i.jsx)(t.td,{children:'"set_next_item"'}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Calls function to load and set the next item"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/control/"}),(0,i.jsxs)(t.td,{children:['"client_is_active", ',(0,i.jsx)("br",{})," clientState"]}),(0,i.jsxs)(t.td,{children:["String, ",(0,i.jsx)("br",{})," Int"]}),(0,i.jsxs)(t.td,{children:["Calls prompt to indicate client status, ",(0,i.jsx)("br",{})," Tells Max that Unity is running or stopped"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/control/"}),(0,i.jsx)(t.td,{children:'"get_paradigm_information"'}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Calls function to send back the paradigm variables"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/objectspose/"}),(0,i.jsxs)(t.td,{children:["objectIndex, ",(0,i.jsx)("br",{})," objectPosition"]}),(0,i.jsxs)(t.td,{children:["Int, ",(0,i.jsx)("br",{})," Vector3"]}),(0,i.jsxs)(t.td,{children:["Index to identify which audio source should be updated, ",(0,i.jsx)("br",{})," [X, Y, Z] position in Unity coordinates"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/objectstrigger/"}),(0,i.jsxs)(t.td,{children:["objectIndex, ",(0,i.jsx)("br",{})," triggerMessage"]}),(0,i.jsxs)(t.td,{children:["Int, ",(0,i.jsx)("br",{})," String"]}),(0,i.jsxs)(t.td,{children:["Index to identify which audio source should be updated, ",(0,i.jsx)("br",{}),' "Play" or "Stop" message to control event audio playback']})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/userpose/pos/"}),(0,i.jsx)(t.td,{children:"userPositionPos"}),(0,i.jsx)(t.td,{children:"Vector3"}),(0,i.jsx)(t.td,{children:"[X, Y, Z] position in Unity coordinates"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/userpose/rot/"}),(0,i.jsx)(t.td,{children:"userPositionRot"}),(0,i.jsx)(t.td,{children:"Vector3"}),(0,i.jsx)(t.td,{children:"[X, Y, Z] (Yaw, Pitch, Roll) rotation in Euler angles"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/userpose/teleport"}),(0,i.jsx)(t.td,{children:"userTeleportFlag"}),(0,i.jsx)(t.td,{children:"Int"}),(0,i.jsx)(t.td,{children:"Transition from 0 to 1 indicate successful teleportaion"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/controllerpose/left/"}),(0,i.jsxs)(t.td,{children:["controllerPos, ",(0,i.jsx)("br",{})," controllerRot"]}),(0,i.jsxs)(t.td,{children:["Vector3, ",(0,i.jsx)("br",{})," Vector3"]}),(0,i.jsxs)(t.td,{children:["[X, Y, Z] position in Unity coordinates, ",(0,i.jsx)("br",{})," [X, Y, Z] (Yaw, Pitch, Roll) rotation in Euler angles"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/stream/controllerpose/right/"}),(0,i.jsxs)(t.td,{children:["controllerPos, ",(0,i.jsx)("br",{})," controllerRot"]}),(0,i.jsxs)(t.td,{children:["Vector3, ",(0,i.jsx)("br",{})," Vector3"]}),(0,i.jsxs)(t.td,{children:["[X, Y, Z] position in Unity coordinates, ",(0,i.jsx)("br",{})," [X, Y, Z] (Yaw, Pitch, Roll) rotation in Euler angles"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"/audioplayback/"}),(0,i.jsx)(t.td,{children:"audioPlayback"}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:'"Play" or "Stop" message to control continuous audio playback'})]})]})]})})]})}function x(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);